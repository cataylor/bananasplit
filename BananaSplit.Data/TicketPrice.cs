//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace BananaSplit.Data
{
    public partial class TicketPrice
    {
        #region Primitive Properties
    
        public virtual long TicketPriceId
        {
            get;
            set;
        }
    
        public virtual long TeamId
        {
            get { return _teamId; }
            set
            {
                if (_teamId != value)
                {
                    if (Team != null && Team.TeamId != value)
                    {
                        Team = null;
                    }
                    _teamId = value;
                }
            }
        }
        private long _teamId;
    
        public virtual long ManagingMemberId
        {
            get { return _managingMemberId; }
            set
            {
                if (_managingMemberId != value)
                {
                    if (Member != null && Member.MemberId != value)
                    {
                        Member = null;
                    }
                    _managingMemberId = value;
                }
            }
        }
        private long _managingMemberId;
    
        public virtual decimal Price
        {
            get;
            set;
        }
    
        public virtual System.DateTime EventDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime DateCreated
        {
            get;
            set;
        }
    
        public virtual System.DateTime DateUpdated
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Member Member
        {
            get { return _member; }
            set
            {
                if (!ReferenceEquals(_member, value))
                {
                    var previousValue = _member;
                    _member = value;
                    FixupMember(previousValue);
                }
            }
        }
        private Member _member;
    
        public virtual ICollection<PartnerTicket> PartnerTickets
        {
            get
            {
                if (_partnerTickets == null)
                {
                    var newCollection = new FixupCollection<PartnerTicket>();
                    newCollection.CollectionChanged += FixupPartnerTickets;
                    _partnerTickets = newCollection;
                }
                return _partnerTickets;
            }
            set
            {
                if (!ReferenceEquals(_partnerTickets, value))
                {
                    var previousValue = _partnerTickets as FixupCollection<PartnerTicket>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPartnerTickets;
                    }
                    _partnerTickets = value;
                    var newValue = value as FixupCollection<PartnerTicket>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPartnerTickets;
                    }
                }
            }
        }
        private ICollection<PartnerTicket> _partnerTickets;
    
        public virtual Team Team
        {
            get { return _team; }
            set
            {
                if (!ReferenceEquals(_team, value))
                {
                    var previousValue = _team;
                    _team = value;
                    FixupTeam(previousValue);
                }
            }
        }
        private Team _team;

        #endregion
        #region Association Fixup
    
        private void FixupMember(Member previousValue)
        {
            if (previousValue != null && previousValue.TicketPrices.Contains(this))
            {
                previousValue.TicketPrices.Remove(this);
            }
    
            if (Member != null)
            {
                if (!Member.TicketPrices.Contains(this))
                {
                    Member.TicketPrices.Add(this);
                }
                if (ManagingMemberId != Member.MemberId)
                {
                    ManagingMemberId = Member.MemberId;
                }
            }
        }
    
        private void FixupTeam(Team previousValue)
        {
            if (previousValue != null && previousValue.TicketPrices.Contains(this))
            {
                previousValue.TicketPrices.Remove(this);
            }
    
            if (Team != null)
            {
                if (!Team.TicketPrices.Contains(this))
                {
                    Team.TicketPrices.Add(this);
                }
                if (TeamId != Team.TeamId)
                {
                    TeamId = Team.TeamId;
                }
            }
        }
    
        private void FixupPartnerTickets(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerTicket item in e.NewItems)
                {
                    item.TicketPrice = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerTicket item in e.OldItems)
                {
                    if (ReferenceEquals(item.TicketPrice, this))
                    {
                        item.TicketPrice = null;
                    }
                }
            }
        }

        #endregion
    }
}
