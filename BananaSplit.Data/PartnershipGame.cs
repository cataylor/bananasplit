//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace BananaSplit.Data
{
    public partial class PartnershipGame
    {
        #region Primitive Properties
    
        public virtual long PartnershipGameId
        {
            get;
            set;
        }
    
        public virtual long PartnershipId
        {
            get { return _partnershipId; }
            set
            {
                if (_partnershipId != value)
                {
                    if (Partnership != null && Partnership.PartnershipId != value)
                    {
                        Partnership = null;
                    }
                    _partnershipId = value;
                }
            }
        }
        private long _partnershipId;
    
        public virtual long MemberId
        {
            get { return _memberId; }
            set
            {
                if (_memberId != value)
                {
                    if (Member != null && Member.MemberId != value)
                    {
                        Member = null;
                    }
                    _memberId = value;
                }
            }
        }
        private long _memberId;
    
        public virtual int GameId
        {
            get { return _gameId; }
            set
            {
                if (_gameId != value)
                {
                    if (Game != null && Game.GameId != value)
                    {
                        Game = null;
                    }
                    _gameId = value;
                }
            }
        }
        private int _gameId;
    
        public virtual bool IsAvailable
        {
            get;
            set;
        }
    
        public virtual bool IsPreLottery
        {
            get;
            set;
        }
    
        public virtual System.DateTime DateCreated
        {
            get;
            set;
        }
    
        public virtual System.DateTime DateUpdated
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Game Game
        {
            get { return _game; }
            set
            {
                if (!ReferenceEquals(_game, value))
                {
                    var previousValue = _game;
                    _game = value;
                    FixupGame(previousValue);
                }
            }
        }
        private Game _game;
    
        public virtual Member Member
        {
            get { return _member; }
            set
            {
                if (!ReferenceEquals(_member, value))
                {
                    var previousValue = _member;
                    _member = value;
                    FixupMember(previousValue);
                }
            }
        }
        private Member _member;
    
        public virtual Partnership Partnership
        {
            get { return _partnership; }
            set
            {
                if (!ReferenceEquals(_partnership, value))
                {
                    var previousValue = _partnership;
                    _partnership = value;
                    FixupPartnership(previousValue);
                }
            }
        }
        private Partnership _partnership;

        #endregion
        #region Association Fixup
    
        private void FixupGame(Game previousValue)
        {
            if (previousValue != null && previousValue.PartnershipGames.Contains(this))
            {
                previousValue.PartnershipGames.Remove(this);
            }
    
            if (Game != null)
            {
                if (!Game.PartnershipGames.Contains(this))
                {
                    Game.PartnershipGames.Add(this);
                }
                if (GameId != Game.GameId)
                {
                    GameId = Game.GameId;
                }
            }
        }
    
        private void FixupMember(Member previousValue)
        {
            if (previousValue != null && previousValue.PartnershipGames.Contains(this))
            {
                previousValue.PartnershipGames.Remove(this);
            }
    
            if (Member != null)
            {
                if (!Member.PartnershipGames.Contains(this))
                {
                    Member.PartnershipGames.Add(this);
                }
                if (MemberId != Member.MemberId)
                {
                    MemberId = Member.MemberId;
                }
            }
        }
    
        private void FixupPartnership(Partnership previousValue)
        {
            if (previousValue != null && previousValue.PartnershipGames.Contains(this))
            {
                previousValue.PartnershipGames.Remove(this);
            }
    
            if (Partnership != null)
            {
                if (!Partnership.PartnershipGames.Contains(this))
                {
                    Partnership.PartnershipGames.Add(this);
                }
                if (PartnershipId != Partnership.PartnershipId)
                {
                    PartnershipId = Partnership.PartnershipId;
                }
            }
        }

        #endregion
    }
}
